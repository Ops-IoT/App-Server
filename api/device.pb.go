// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceKeys struct {
	// HEX encoded application key.
	AppKey               string   `protobuf:"bytes,1,opt,name=appKey" json:"appKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceKeys) Reset()         { *m = DeviceKeys{} }
func (m *DeviceKeys) String() string { return proto.CompactTextString(m) }
func (*DeviceKeys) ProtoMessage()    {}
func (*DeviceKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{0}
}
func (m *DeviceKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceKeys.Unmarshal(m, b)
}
func (m *DeviceKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceKeys.Marshal(b, m, deterministic)
}
func (dst *DeviceKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceKeys.Merge(dst, src)
}
func (m *DeviceKeys) XXX_Size() int {
	return xxx_messageInfo_DeviceKeys.Size(m)
}
func (m *DeviceKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceKeys.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceKeys proto.InternalMessageInfo

func (m *DeviceKeys) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

type CreateDeviceRequest struct {
	// Hex encoded DevEUI.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	ApplicationID int64 `protobuf:"varint,13,opt,name=applicationID" json:"applicationID,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileID string `protobuf:"bytes,18,opt,name=deviceProfileID" json:"deviceProfileID,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck        bool     `protobuf:"varint,19,opt,name=skipFCntCheck" json:"skipFCntCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceRequest) Reset()         { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()    {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{1}
}
func (m *CreateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest.Unmarshal(m, b)
}
func (m *CreateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest.Merge(dst, src)
}
func (m *CreateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest.Size(m)
}
func (m *CreateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest proto.InternalMessageInfo

func (m *CreateDeviceRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *CreateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateDeviceRequest) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *CreateDeviceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateDeviceRequest) GetDeviceProfileID() string {
	if m != nil {
		return m.DeviceProfileID
	}
	return ""
}

func (m *CreateDeviceRequest) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

type CreateDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceResponse) Reset()         { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()    {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{2}
}
func (m *CreateDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceResponse.Unmarshal(m, b)
}
func (m *CreateDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *CreateDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceResponse.Merge(dst, src)
}
func (m *CreateDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceResponse.Size(m)
}
func (m *CreateDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceResponse proto.InternalMessageInfo

type GetDeviceRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{3}
}
func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(dst, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type GetDeviceResponse struct {
	// Hex encoded DevEUI.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	ApplicationID int64 `protobuf:"varint,13,opt,name=applicationID" json:"applicationID,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileID string `protobuf:"bytes,18,opt,name=deviceProfileID" json:"deviceProfileID,omitempty"`
	// The device battery status
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,19,opt,name=deviceStatusBattery" json:"deviceStatusBattery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,20,opt,name=deviceStatusMargin" json:"deviceStatusMargin,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	LastSeenAt string `protobuf:"bytes,21,opt,name=lastSeenAt" json:"lastSeenAt,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck        bool     `protobuf:"varint,22,opt,name=skipFCntCheck" json:"skipFCntCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{4}
}
func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(dst, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *GetDeviceResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDeviceResponse) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *GetDeviceResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetDeviceResponse) GetDeviceProfileID() string {
	if m != nil {
		return m.DeviceProfileID
	}
	return ""
}

func (m *GetDeviceResponse) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *GetDeviceResponse) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *GetDeviceResponse) GetLastSeenAt() string {
	if m != nil {
		return m.LastSeenAt
	}
	return ""
}

func (m *GetDeviceResponse) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

type DeleteDeviceRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{5}
}
func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(dst, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type DeleteDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceResponse) Reset()         { *m = DeleteDeviceResponse{} }
func (m *DeleteDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceResponse) ProtoMessage()    {}
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{6}
}
func (m *DeleteDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceResponse.Unmarshal(m, b)
}
func (m *DeleteDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceResponse.Merge(dst, src)
}
func (m *DeleteDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceResponse.Size(m)
}
func (m *DeleteDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceResponse proto.InternalMessageInfo

type ListDeviceByApplicationIDRequest struct {
	// ID of the application for which to list the devices.
	ApplicationID int64 `protobuf:"varint,3,opt,name=applicationID" json:"applicationID,omitempty"`
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset of the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// Search against name or DevEUI
	Search               string   `protobuf:"bytes,4,opt,name=search" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceByApplicationIDRequest) Reset()         { *m = ListDeviceByApplicationIDRequest{} }
func (m *ListDeviceByApplicationIDRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceByApplicationIDRequest) ProtoMessage()    {}
func (*ListDeviceByApplicationIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{7}
}
func (m *ListDeviceByApplicationIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceByApplicationIDRequest.Unmarshal(m, b)
}
func (m *ListDeviceByApplicationIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceByApplicationIDRequest.Marshal(b, m, deterministic)
}
func (dst *ListDeviceByApplicationIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceByApplicationIDRequest.Merge(dst, src)
}
func (m *ListDeviceByApplicationIDRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceByApplicationIDRequest.Size(m)
}
func (m *ListDeviceByApplicationIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceByApplicationIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceByApplicationIDRequest proto.InternalMessageInfo

func (m *ListDeviceByApplicationIDRequest) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *ListDeviceByApplicationIDRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDeviceByApplicationIDRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDeviceByApplicationIDRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type DeviceListItem struct {
	// Hex encoded DevEUI.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	ApplicationID int64 `protobuf:"varint,13,opt,name=applicationID" json:"applicationID,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileID string `protobuf:"bytes,18,opt,name=deviceProfileID" json:"deviceProfileID,omitempty"`
	// Device-profile name.
	DeviceProfileName string `protobuf:"bytes,19,opt,name=deviceProfileName" json:"deviceProfileName,omitempty"`
	// The device battery status
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,20,opt,name=deviceStatusBattery" json:"deviceStatusBattery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,21,opt,name=deviceStatusMargin" json:"deviceStatusMargin,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	LastSeenAt           string   `protobuf:"bytes,22,opt,name=lastSeenAt" json:"lastSeenAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceListItem) Reset()         { *m = DeviceListItem{} }
func (m *DeviceListItem) String() string { return proto.CompactTextString(m) }
func (*DeviceListItem) ProtoMessage()    {}
func (*DeviceListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{8}
}
func (m *DeviceListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceListItem.Unmarshal(m, b)
}
func (m *DeviceListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceListItem.Marshal(b, m, deterministic)
}
func (dst *DeviceListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceListItem.Merge(dst, src)
}
func (m *DeviceListItem) XXX_Size() int {
	return xxx_messageInfo_DeviceListItem.Size(m)
}
func (m *DeviceListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceListItem.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceListItem proto.InternalMessageInfo

func (m *DeviceListItem) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *DeviceListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceListItem) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *DeviceListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileID() string {
	if m != nil {
		return m.DeviceProfileID
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileName() string {
	if m != nil {
		return m.DeviceProfileName
	}
	return ""
}

func (m *DeviceListItem) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *DeviceListItem) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *DeviceListItem) GetLastSeenAt() string {
	if m != nil {
		return m.LastSeenAt
	}
	return ""
}

type ListDeviceResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=totalCount" json:"totalCount,omitempty"`
	// Devices within this result-set.
	Result               []*DeviceListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceResponse) Reset()         { *m = ListDeviceResponse{} }
func (m *ListDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceResponse) ProtoMessage()    {}
func (*ListDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{9}
}
func (m *ListDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceResponse.Unmarshal(m, b)
}
func (m *ListDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *ListDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceResponse.Merge(dst, src)
}
func (m *ListDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceResponse.Size(m)
}
func (m *ListDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceResponse proto.InternalMessageInfo

func (m *ListDeviceResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDeviceResponse) GetResult() []*DeviceListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateDeviceRequest struct {
	// Hex encoded DevEUI.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	ApplicationID int64 `protobuf:"varint,13,opt,name=applicationID" json:"applicationID,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileID string `protobuf:"bytes,18,opt,name=deviceProfileID" json:"deviceProfileID,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck        bool     `protobuf:"varint,19,opt,name=skipFCntCheck" json:"skipFCntCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{10}
}
func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(dst, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *UpdateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateDeviceRequest) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *UpdateDeviceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateDeviceRequest) GetDeviceProfileID() string {
	if m != nil {
		return m.DeviceProfileID
	}
	return ""
}

func (m *UpdateDeviceRequest) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

type UpdateDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceResponse) Reset()         { *m = UpdateDeviceResponse{} }
func (m *UpdateDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceResponse) ProtoMessage()    {}
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{11}
}
func (m *UpdateDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceResponse.Unmarshal(m, b)
}
func (m *UpdateDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceResponse.Merge(dst, src)
}
func (m *UpdateDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceResponse.Size(m)
}
func (m *UpdateDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceResponse proto.InternalMessageInfo

type CreateDeviceKeysRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string      `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	DeviceKeys           *DeviceKeys `protobuf:"bytes,2,opt,name=deviceKeys" json:"deviceKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDeviceKeysRequest) Reset()         { *m = CreateDeviceKeysRequest{} }
func (m *CreateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceKeysRequest) ProtoMessage()    {}
func (*CreateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{12}
}
func (m *CreateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *CreateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (dst *CreateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceKeysRequest.Merge(dst, src)
}
func (m *CreateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceKeysRequest.Size(m)
}
func (m *CreateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceKeysRequest proto.InternalMessageInfo

func (m *CreateDeviceKeysRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *CreateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type CreateDeviceKeysResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceKeysResponse) Reset()         { *m = CreateDeviceKeysResponse{} }
func (m *CreateDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceKeysResponse) ProtoMessage()    {}
func (*CreateDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{13}
}
func (m *CreateDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceKeysResponse.Unmarshal(m, b)
}
func (m *CreateDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (dst *CreateDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceKeysResponse.Merge(dst, src)
}
func (m *CreateDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceKeysResponse.Size(m)
}
func (m *CreateDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceKeysResponse proto.InternalMessageInfo

type GetDeviceKeysRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceKeysRequest) Reset()         { *m = GetDeviceKeysRequest{} }
func (m *GetDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysRequest) ProtoMessage()    {}
func (*GetDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{14}
}
func (m *GetDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysRequest.Unmarshal(m, b)
}
func (m *GetDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysRequest.Merge(dst, src)
}
func (m *GetDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysRequest.Size(m)
}
func (m *GetDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceKeysRequest proto.InternalMessageInfo

func (m *GetDeviceKeysRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type GetDeviceKeysResponse struct {
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=deviceKeys" json:"deviceKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDeviceKeysResponse) Reset()         { *m = GetDeviceKeysResponse{} }
func (m *GetDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysResponse) ProtoMessage()    {}
func (*GetDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{15}
}
func (m *GetDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysResponse.Unmarshal(m, b)
}
func (m *GetDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysResponse.Merge(dst, src)
}
func (m *GetDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysResponse.Size(m)
}
func (m *GetDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceKeysResponse proto.InternalMessageInfo

func (m *GetDeviceKeysResponse) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type UpdateDeviceKeysRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string      `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	DeviceKeys           *DeviceKeys `protobuf:"bytes,2,opt,name=deviceKeys" json:"deviceKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDeviceKeysRequest) Reset()         { *m = UpdateDeviceKeysRequest{} }
func (m *UpdateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceKeysRequest) ProtoMessage()    {}
func (*UpdateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{16}
}
func (m *UpdateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceKeysRequest.Merge(dst, src)
}
func (m *UpdateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Size(m)
}
func (m *UpdateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceKeysRequest proto.InternalMessageInfo

func (m *UpdateDeviceKeysRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *UpdateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type UpdateDeviceKeysResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceKeysResponse) Reset()         { *m = UpdateDeviceKeysResponse{} }
func (m *UpdateDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceKeysResponse) ProtoMessage()    {}
func (*UpdateDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{17}
}
func (m *UpdateDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceKeysResponse.Unmarshal(m, b)
}
func (m *UpdateDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceKeysResponse.Merge(dst, src)
}
func (m *UpdateDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceKeysResponse.Size(m)
}
func (m *UpdateDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceKeysResponse proto.InternalMessageInfo

type DeleteDeviceKeysRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceKeysRequest) Reset()         { *m = DeleteDeviceKeysRequest{} }
func (m *DeleteDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceKeysRequest) ProtoMessage()    {}
func (*DeleteDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{18}
}
func (m *DeleteDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceKeysRequest.Merge(dst, src)
}
func (m *DeleteDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Size(m)
}
func (m *DeleteDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceKeysRequest proto.InternalMessageInfo

func (m *DeleteDeviceKeysRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type DeleteDeviceKeysResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceKeysResponse) Reset()         { *m = DeleteDeviceKeysResponse{} }
func (m *DeleteDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceKeysResponse) ProtoMessage()    {}
func (*DeleteDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{19}
}
func (m *DeleteDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceKeysResponse.Unmarshal(m, b)
}
func (m *DeleteDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceKeysResponse.Merge(dst, src)
}
func (m *DeleteDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceKeysResponse.Size(m)
}
func (m *DeleteDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceKeysResponse proto.InternalMessageInfo

type ActivateDeviceRequest struct {
	// Hex encoded DevEUI of the device to activate.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Hex encoded DevAddr.
	DevAddr string `protobuf:"bytes,2,opt,name=devAddr" json:"devAddr,omitempty"`
	// Hex encoded AppSKey.
	AppSKey string `protobuf:"bytes,3,opt,name=appSKey" json:"appSKey,omitempty"`
	// Hex encoded NwkSKey.
	NwkSKey string `protobuf:"bytes,4,opt,name=nwkSKey" json:"nwkSKey,omitempty"`
	// Uplink frame-counter.
	FCntUp uint32 `protobuf:"varint,5,opt,name=fCntUp" json:"fCntUp,omitempty"`
	// Downlink frame-counter.
	FCntDown uint32 `protobuf:"varint,6,opt,name=fCntDown" json:"fCntDown,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	// Deprecated! Use the skipFCntCheck flag on the device object itself.
	SkipFCntCheck        bool     `protobuf:"varint,7,opt,name=skipFCntCheck" json:"skipFCntCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateDeviceRequest) Reset()         { *m = ActivateDeviceRequest{} }
func (m *ActivateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateDeviceRequest) ProtoMessage()    {}
func (*ActivateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{20}
}
func (m *ActivateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDeviceRequest.Unmarshal(m, b)
}
func (m *ActivateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *ActivateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDeviceRequest.Merge(dst, src)
}
func (m *ActivateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateDeviceRequest.Size(m)
}
func (m *ActivateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateDeviceRequest proto.InternalMessageInfo

func (m *ActivateDeviceRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *ActivateDeviceRequest) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *ActivateDeviceRequest) GetAppSKey() string {
	if m != nil {
		return m.AppSKey
	}
	return ""
}

func (m *ActivateDeviceRequest) GetNwkSKey() string {
	if m != nil {
		return m.NwkSKey
	}
	return ""
}

func (m *ActivateDeviceRequest) GetFCntUp() uint32 {
	if m != nil {
		return m.FCntUp
	}
	return 0
}

func (m *ActivateDeviceRequest) GetFCntDown() uint32 {
	if m != nil {
		return m.FCntDown
	}
	return 0
}

func (m *ActivateDeviceRequest) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

type ActivateDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateDeviceResponse) Reset()         { *m = ActivateDeviceResponse{} }
func (m *ActivateDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateDeviceResponse) ProtoMessage()    {}
func (*ActivateDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{21}
}
func (m *ActivateDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDeviceResponse.Unmarshal(m, b)
}
func (m *ActivateDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *ActivateDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDeviceResponse.Merge(dst, src)
}
func (m *ActivateDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ActivateDeviceResponse.Size(m)
}
func (m *ActivateDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateDeviceResponse proto.InternalMessageInfo

type GetDeviceActivationRequest struct {
	// Hex encoded DevEUI of the device.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceActivationRequest) Reset()         { *m = GetDeviceActivationRequest{} }
func (m *GetDeviceActivationRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationRequest) ProtoMessage()    {}
func (*GetDeviceActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{22}
}
func (m *GetDeviceActivationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationRequest.Unmarshal(m, b)
}
func (m *GetDeviceActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationRequest.Merge(dst, src)
}
func (m *GetDeviceActivationRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationRequest.Size(m)
}
func (m *GetDeviceActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationRequest proto.InternalMessageInfo

func (m *GetDeviceActivationRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type GetDeviceActivationResponse struct {
	// Hex encoded DevAddr.
	DevAddr string `protobuf:"bytes,1,opt,name=devAddr" json:"devAddr,omitempty"`
	// Hex encoded AppSKey.
	AppSKey string `protobuf:"bytes,2,opt,name=appSKey" json:"appSKey,omitempty"`
	// Hex encoded NwkSKey.
	NwkSKey string `protobuf:"bytes,3,opt,name=nwkSKey" json:"nwkSKey,omitempty"`
	// Uplink frame-counter.
	FCntUp uint32 `protobuf:"varint,4,opt,name=fCntUp" json:"fCntUp,omitempty"`
	// Downlink frame-counter.
	FCntDown uint32 `protobuf:"varint,5,opt,name=fCntDown" json:"fCntDown,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck        bool     `protobuf:"varint,6,opt,name=skipFCntCheck" json:"skipFCntCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceActivationResponse) Reset()         { *m = GetDeviceActivationResponse{} }
func (m *GetDeviceActivationResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationResponse) ProtoMessage()    {}
func (*GetDeviceActivationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{23}
}
func (m *GetDeviceActivationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationResponse.Unmarshal(m, b)
}
func (m *GetDeviceActivationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceActivationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationResponse.Merge(dst, src)
}
func (m *GetDeviceActivationResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationResponse.Size(m)
}
func (m *GetDeviceActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationResponse proto.InternalMessageInfo

func (m *GetDeviceActivationResponse) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *GetDeviceActivationResponse) GetAppSKey() string {
	if m != nil {
		return m.AppSKey
	}
	return ""
}

func (m *GetDeviceActivationResponse) GetNwkSKey() string {
	if m != nil {
		return m.NwkSKey
	}
	return ""
}

func (m *GetDeviceActivationResponse) GetFCntUp() uint32 {
	if m != nil {
		return m.FCntUp
	}
	return 0
}

func (m *GetDeviceActivationResponse) GetFCntDown() uint32 {
	if m != nil {
		return m.FCntDown
	}
	return 0
}

func (m *GetDeviceActivationResponse) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

type GetRandomDevAddrRequest struct {
	// Hex encoded DevEUI of the device to activate.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrRequest) Reset()         { *m = GetRandomDevAddrRequest{} }
func (m *GetRandomDevAddrRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrRequest) ProtoMessage()    {}
func (*GetRandomDevAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{24}
}
func (m *GetRandomDevAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrRequest.Unmarshal(m, b)
}
func (m *GetRandomDevAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrRequest.Marshal(b, m, deterministic)
}
func (dst *GetRandomDevAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrRequest.Merge(dst, src)
}
func (m *GetRandomDevAddrRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrRequest.Size(m)
}
func (m *GetRandomDevAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrRequest proto.InternalMessageInfo

func (m *GetRandomDevAddrRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type GetRandomDevAddrResponse struct {
	// Hex encoded DevAddr.
	DevAddr              string   `protobuf:"bytes,1,opt,name=devAddr" json:"devAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrResponse) Reset()         { *m = GetRandomDevAddrResponse{} }
func (m *GetRandomDevAddrResponse) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrResponse) ProtoMessage()    {}
func (*GetRandomDevAddrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{25}
}
func (m *GetRandomDevAddrResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrResponse.Unmarshal(m, b)
}
func (m *GetRandomDevAddrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrResponse.Marshal(b, m, deterministic)
}
func (dst *GetRandomDevAddrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrResponse.Merge(dst, src)
}
func (m *GetRandomDevAddrResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrResponse.Size(m)
}
func (m *GetRandomDevAddrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrResponse proto.InternalMessageInfo

func (m *GetRandomDevAddrResponse) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

type StreamDeviceFrameLogsRequest struct {
	// Hex encoded DevEUI.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceFrameLogsRequest) Reset()         { *m = StreamDeviceFrameLogsRequest{} }
func (m *StreamDeviceFrameLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsRequest) ProtoMessage()    {}
func (*StreamDeviceFrameLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{26}
}
func (m *StreamDeviceFrameLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Marshal(b, m, deterministic)
}
func (dst *StreamDeviceFrameLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.Merge(dst, src)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Size(m)
}
func (m *StreamDeviceFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsRequest proto.InternalMessageInfo

func (m *StreamDeviceFrameLogsRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type StreamDeviceFrameLogsResponse struct {
	// Contains zero or one uplink frame.
	UplinkFrames []*UplinkFrameLog `protobuf:"bytes,1,rep,name=uplinkFrames" json:"uplinkFrames,omitempty"`
	// Contains zero or one downlink frame.
	DownlinkFrames       []*DownlinkFrameLog `protobuf:"bytes,2,rep,name=downlinkFrames" json:"downlinkFrames,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *StreamDeviceFrameLogsResponse) Reset()         { *m = StreamDeviceFrameLogsResponse{} }
func (m *StreamDeviceFrameLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsResponse) ProtoMessage()    {}
func (*StreamDeviceFrameLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{27}
}
func (m *StreamDeviceFrameLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Marshal(b, m, deterministic)
}
func (dst *StreamDeviceFrameLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.Merge(dst, src)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Size(m)
}
func (m *StreamDeviceFrameLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsResponse proto.InternalMessageInfo

func (m *StreamDeviceFrameLogsResponse) GetUplinkFrames() []*UplinkFrameLog {
	if m != nil {
		return m.UplinkFrames
	}
	return nil
}

func (m *StreamDeviceFrameLogsResponse) GetDownlinkFrames() []*DownlinkFrameLog {
	if m != nil {
		return m.DownlinkFrames
	}
	return nil
}

type StreamDeviceEventLogsRequest struct {
	// Hex encoded DevEUI.
	DevEUI               string   `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsRequest) Reset()         { *m = StreamDeviceEventLogsRequest{} }
func (m *StreamDeviceEventLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsRequest) ProtoMessage()    {}
func (*StreamDeviceEventLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{28}
}
func (m *StreamDeviceEventLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Marshal(b, m, deterministic)
}
func (dst *StreamDeviceEventLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsRequest.Merge(dst, src)
}
func (m *StreamDeviceEventLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Size(m)
}
func (m *StreamDeviceEventLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsRequest proto.InternalMessageInfo

func (m *StreamDeviceEventLogsRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type StreamDeviceEventLogsResponse struct {
	// The event type.
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// The event payload in JSON encoding.
	PayloadJSON          string   `protobuf:"bytes,2,opt,name=payloadJSON" json:"payloadJSON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsResponse) Reset()         { *m = StreamDeviceEventLogsResponse{} }
func (m *StreamDeviceEventLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsResponse) ProtoMessage()    {}
func (*StreamDeviceEventLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_e3b1e4891c217207, []int{29}
}
func (m *StreamDeviceEventLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Marshal(b, m, deterministic)
}
func (dst *StreamDeviceEventLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsResponse.Merge(dst, src)
}
func (m *StreamDeviceEventLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Size(m)
}
func (m *StreamDeviceEventLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsResponse proto.InternalMessageInfo

func (m *StreamDeviceEventLogsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StreamDeviceEventLogsResponse) GetPayloadJSON() string {
	if m != nil {
		return m.PayloadJSON
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceKeys)(nil), "api.DeviceKeys")
	proto.RegisterType((*CreateDeviceRequest)(nil), "api.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "api.CreateDeviceResponse")
	proto.RegisterType((*GetDeviceRequest)(nil), "api.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "api.GetDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "api.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceResponse)(nil), "api.DeleteDeviceResponse")
	proto.RegisterType((*ListDeviceByApplicationIDRequest)(nil), "api.ListDeviceByApplicationIDRequest")
	proto.RegisterType((*DeviceListItem)(nil), "api.DeviceListItem")
	proto.RegisterType((*ListDeviceResponse)(nil), "api.ListDeviceResponse")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "api.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceResponse)(nil), "api.UpdateDeviceResponse")
	proto.RegisterType((*CreateDeviceKeysRequest)(nil), "api.CreateDeviceKeysRequest")
	proto.RegisterType((*CreateDeviceKeysResponse)(nil), "api.CreateDeviceKeysResponse")
	proto.RegisterType((*GetDeviceKeysRequest)(nil), "api.GetDeviceKeysRequest")
	proto.RegisterType((*GetDeviceKeysResponse)(nil), "api.GetDeviceKeysResponse")
	proto.RegisterType((*UpdateDeviceKeysRequest)(nil), "api.UpdateDeviceKeysRequest")
	proto.RegisterType((*UpdateDeviceKeysResponse)(nil), "api.UpdateDeviceKeysResponse")
	proto.RegisterType((*DeleteDeviceKeysRequest)(nil), "api.DeleteDeviceKeysRequest")
	proto.RegisterType((*DeleteDeviceKeysResponse)(nil), "api.DeleteDeviceKeysResponse")
	proto.RegisterType((*ActivateDeviceRequest)(nil), "api.ActivateDeviceRequest")
	proto.RegisterType((*ActivateDeviceResponse)(nil), "api.ActivateDeviceResponse")
	proto.RegisterType((*GetDeviceActivationRequest)(nil), "api.GetDeviceActivationRequest")
	proto.RegisterType((*GetDeviceActivationResponse)(nil), "api.GetDeviceActivationResponse")
	proto.RegisterType((*GetRandomDevAddrRequest)(nil), "api.GetRandomDevAddrRequest")
	proto.RegisterType((*GetRandomDevAddrResponse)(nil), "api.GetRandomDevAddrResponse")
	proto.RegisterType((*StreamDeviceFrameLogsRequest)(nil), "api.StreamDeviceFrameLogsRequest")
	proto.RegisterType((*StreamDeviceFrameLogsResponse)(nil), "api.StreamDeviceFrameLogsResponse")
	proto.RegisterType((*StreamDeviceEventLogsRequest)(nil), "api.StreamDeviceEventLogsRequest")
	proto.RegisterType((*StreamDeviceEventLogsResponse)(nil), "api.StreamDeviceEventLogsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Device service

type DeviceClient interface {
	// Create creates the given device.
	Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error)
	// Get returns the device matching the given DevEUI.
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error)
	// ListByApplicationID lists the devices by the given application ID, sorted by the name of the device.
	ListByApplicationID(ctx context.Context, in *ListDeviceByApplicationIDRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error)
	// Update updates the device matching the given DevEUI.
	Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*CreateDeviceKeysResponse, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*UpdateDeviceKeysResponse, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*DeleteDeviceKeysResponse, error)
	// Activate (re)activates the device (only when ABP is set to true).
	Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*ActivateDeviceResponse, error)
	// GetActivation returns the current activation details of the device (OTAA and ABP).
	GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	// Note: these are the raw LoRaWAN frames and this endpoint is intended for debugging.
	StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (Device_StreamFrameLogsClient, error)
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	// Note: this endpoint is intended for debugging and should not be used for building
	// integrations.
	StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (Device_StreamEventLogsClient, error)
}

type deviceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceClient(cc *grpc.ClientConn) DeviceClient {
	return &deviceClient{cc}
}

func (c *deviceClient) Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error) {
	out := new(CreateDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error) {
	out := new(DeleteDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ListByApplicationID(ctx context.Context, in *ListDeviceByApplicationIDRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error) {
	out := new(ListDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/ListByApplicationID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error) {
	out := new(UpdateDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*CreateDeviceKeysResponse, error) {
	out := new(CreateDeviceKeysResponse)
	err := grpc.Invoke(ctx, "/api.Device/CreateKeys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error) {
	out := new(GetDeviceKeysResponse)
	err := grpc.Invoke(ctx, "/api.Device/GetKeys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*UpdateDeviceKeysResponse, error) {
	out := new(UpdateDeviceKeysResponse)
	err := grpc.Invoke(ctx, "/api.Device/UpdateKeys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*DeleteDeviceKeysResponse, error) {
	out := new(DeleteDeviceKeysResponse)
	err := grpc.Invoke(ctx, "/api.Device/DeleteKeys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*ActivateDeviceResponse, error) {
	out := new(ActivateDeviceResponse)
	err := grpc.Invoke(ctx, "/api.Device/Activate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error) {
	out := new(GetDeviceActivationResponse)
	err := grpc.Invoke(ctx, "/api.Device/GetActivation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error) {
	out := new(GetRandomDevAddrResponse)
	err := grpc.Invoke(ctx, "/api.Device/GetRandomDevAddr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (Device_StreamFrameLogsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Device_serviceDesc.Streams[0], c.cc, "/api.Device/StreamFrameLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceStreamFrameLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Device_StreamFrameLogsClient interface {
	Recv() (*StreamDeviceFrameLogsResponse, error)
	grpc.ClientStream
}

type deviceStreamFrameLogsClient struct {
	grpc.ClientStream
}

func (x *deviceStreamFrameLogsClient) Recv() (*StreamDeviceFrameLogsResponse, error) {
	m := new(StreamDeviceFrameLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceClient) StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (Device_StreamEventLogsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Device_serviceDesc.Streams[1], c.cc, "/api.Device/StreamEventLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceStreamEventLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Device_StreamEventLogsClient interface {
	Recv() (*StreamDeviceEventLogsResponse, error)
	grpc.ClientStream
}

type deviceStreamEventLogsClient struct {
	grpc.ClientStream
}

func (x *deviceStreamEventLogsClient) Recv() (*StreamDeviceEventLogsResponse, error) {
	m := new(StreamDeviceEventLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Device service

type DeviceServer interface {
	// Create creates the given device.
	Create(context.Context, *CreateDeviceRequest) (*CreateDeviceResponse, error)
	// Get returns the device matching the given DevEUI.
	Get(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(context.Context, *DeleteDeviceRequest) (*DeleteDeviceResponse, error)
	// ListByApplicationID lists the devices by the given application ID, sorted by the name of the device.
	ListByApplicationID(context.Context, *ListDeviceByApplicationIDRequest) (*ListDeviceResponse, error)
	// Update updates the device matching the given DevEUI.
	Update(context.Context, *UpdateDeviceRequest) (*UpdateDeviceResponse, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(context.Context, *CreateDeviceKeysRequest) (*CreateDeviceKeysResponse, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(context.Context, *GetDeviceKeysRequest) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(context.Context, *UpdateDeviceKeysRequest) (*UpdateDeviceKeysResponse, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(context.Context, *DeleteDeviceKeysRequest) (*DeleteDeviceKeysResponse, error)
	// Activate (re)activates the device (only when ABP is set to true).
	Activate(context.Context, *ActivateDeviceRequest) (*ActivateDeviceResponse, error)
	// GetActivation returns the current activation details of the device (OTAA and ABP).
	GetActivation(context.Context, *GetDeviceActivationRequest) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(context.Context, *GetRandomDevAddrRequest) (*GetRandomDevAddrResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	// Note: these are the raw LoRaWAN frames and this endpoint is intended for debugging.
	StreamFrameLogs(*StreamDeviceFrameLogsRequest, Device_StreamFrameLogsServer) error
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	// Note: this endpoint is intended for debugging and should not be used for building
	// integrations.
	StreamEventLogs(*StreamDeviceEventLogsRequest, Device_StreamEventLogsServer) error
}

func RegisterDeviceServer(s *grpc.Server, srv DeviceServer) {
	s.RegisterService(&_Device_serviceDesc, srv)
}

func _Device_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Create(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ListByApplicationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceByApplicationIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).ListByApplicationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/ListByApplicationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).ListByApplicationID(ctx, req.(*ListDeviceByApplicationIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Update(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_CreateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).CreateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/CreateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).CreateKeys(ctx, req.(*CreateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/GetKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetKeys(ctx, req.(*GetDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UpdateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UpdateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/UpdateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UpdateKeys(ctx, req.(*UpdateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_DeleteKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).DeleteKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/DeleteKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).DeleteKeys(ctx, req.(*DeleteDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Activate(ctx, req.(*ActivateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/GetActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetActivation(ctx, req.(*GetDeviceActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetRandomDevAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomDevAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetRandomDevAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Device/GetRandomDevAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetRandomDevAddr(ctx, req.(*GetRandomDevAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_StreamFrameLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceFrameLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServer).StreamFrameLogs(m, &deviceStreamFrameLogsServer{stream})
}

type Device_StreamFrameLogsServer interface {
	Send(*StreamDeviceFrameLogsResponse) error
	grpc.ServerStream
}

type deviceStreamFrameLogsServer struct {
	grpc.ServerStream
}

func (x *deviceStreamFrameLogsServer) Send(m *StreamDeviceFrameLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Device_StreamEventLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceEventLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServer).StreamEventLogs(m, &deviceStreamEventLogsServer{stream})
}

type Device_StreamEventLogsServer interface {
	Send(*StreamDeviceEventLogsResponse) error
	grpc.ServerStream
}

type deviceStreamEventLogsServer struct {
	grpc.ServerStream
}

func (x *deviceStreamEventLogsServer) Send(m *StreamDeviceEventLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Device_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Device",
	HandlerType: (*DeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Device_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Device_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Device_Delete_Handler,
		},
		{
			MethodName: "ListByApplicationID",
			Handler:    _Device_ListByApplicationID_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Device_Update_Handler,
		},
		{
			MethodName: "CreateKeys",
			Handler:    _Device_CreateKeys_Handler,
		},
		{
			MethodName: "GetKeys",
			Handler:    _Device_GetKeys_Handler,
		},
		{
			MethodName: "UpdateKeys",
			Handler:    _Device_UpdateKeys_Handler,
		},
		{
			MethodName: "DeleteKeys",
			Handler:    _Device_DeleteKeys_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _Device_Activate_Handler,
		},
		{
			MethodName: "GetActivation",
			Handler:    _Device_GetActivation_Handler,
		},
		{
			MethodName: "GetRandomDevAddr",
			Handler:    _Device_GetRandomDevAddr_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamFrameLogs",
			Handler:       _Device_StreamFrameLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamEventLogs",
			Handler:       _Device_StreamEventLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device.proto",
}

func init() { proto.RegisterFile("device.proto", fileDescriptor_device_e3b1e4891c217207) }

var fileDescriptor_device_e3b1e4891c217207 = []byte{
	// 1245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0xc6, 0x89, 0x9b, 0xbc, 0xfc, 0x23, 0xe3, 0xd8, 0xde, 0x6e, 0x93, 0xd4, 0x2c, 0x29,
	0x72, 0x53, 0xb0, 0xd3, 0x50, 0x81, 0x84, 0xc4, 0x21, 0x8d, 0xdb, 0x10, 0x1a, 0x0a, 0x5a, 0x2b,
	0x9c, 0x90, 0xd0, 0xc4, 0x3b, 0x71, 0x57, 0xb1, 0x77, 0x97, 0xdd, 0x49, 0x22, 0xab, 0x54, 0x20,
	0x4e, 0x9c, 0xb8, 0x70, 0xe0, 0x53, 0xf0, 0x31, 0xf8, 0x04, 0x1c, 0x50, 0x2f, 0x9c, 0xf8, 0x20,
	0x68, 0xfe, 0xd8, 0x9e, 0xdd, 0x9d, 0xb5, 0xcd, 0x01, 0xa9, 0xe2, 0xe6, 0x79, 0xef, 0xcd, 0xfc,
	0xde, 0xef, 0xbd, 0x37, 0xef, 0xcd, 0x1a, 0x56, 0x5c, 0x72, 0xed, 0x75, 0x48, 0x23, 0x8c, 0x02,
	0x1a, 0xa0, 0x02, 0x0e, 0x3d, 0x6b, 0xab, 0x1b, 0x04, 0xdd, 0x1e, 0x69, 0xe2, 0xd0, 0x6b, 0x62,
	0xdf, 0x0f, 0x28, 0xa6, 0x5e, 0xe0, 0xc7, 0xc2, 0xc4, 0x5a, 0xe9, 0x04, 0xfd, 0x7e, 0xe0, 0x8b,
	0x95, 0xbd, 0x0b, 0xd0, 0xe2, 0x07, 0x3c, 0x23, 0x83, 0x18, 0x55, 0xa0, 0x88, 0xc3, 0xf0, 0x19,
	0x19, 0x98, 0x46, 0xcd, 0xa8, 0x2f, 0x39, 0x72, 0x65, 0xbf, 0x36, 0xa0, 0x74, 0x14, 0x11, 0x4c,
	0x89, 0x30, 0x76, 0xc8, 0xb7, 0x57, 0x24, 0xa6, 0xcc, 0xde, 0x25, 0xd7, 0x4f, 0xce, 0x4e, 0x86,
	0xf6, 0x62, 0x85, 0x10, 0xcc, 0xfb, 0xb8, 0x4f, 0xcc, 0x25, 0x2e, 0xe5, 0xbf, 0xd1, 0x2e, 0xac,
	0xe2, 0x30, 0xec, 0x79, 0x1d, 0xee, 0xcd, 0x49, 0xcb, 0x5c, 0xad, 0x19, 0xf5, 0x82, 0x93, 0x14,
	0xa2, 0x1a, 0x2c, 0xbb, 0x24, 0xee, 0x44, 0x5e, 0xc8, 0x04, 0xe6, 0x1a, 0x3f, 0x40, 0x15, 0xa1,
	0x3a, 0xac, 0x0b, 0xca, 0x5f, 0x46, 0xc1, 0x85, 0xd7, 0x23, 0x27, 0x2d, 0x13, 0x71, 0xab, 0xb4,
	0x98, 0x21, 0xc6, 0x97, 0x5e, 0xf8, 0xf4, 0xc8, 0xa7, 0x47, 0x2f, 0x48, 0xe7, 0xd2, 0x2c, 0xd5,
	0x8c, 0xfa, 0xa2, 0x93, 0x14, 0xda, 0x15, 0xd8, 0x4c, 0x52, 0x8b, 0xc3, 0xc0, 0x8f, 0x89, 0xbd,
	0x07, 0x6f, 0x1d, 0x13, 0x3a, 0x13, 0x5f, 0xfb, 0xf5, 0x1c, 0x6c, 0x28, 0xc6, 0xe2, 0x84, 0x37,
	0x3c, 0x3a, 0xfb, 0x50, 0x12, 0xa2, 0x36, 0xc5, 0xf4, 0x2a, 0x7e, 0x8c, 0x29, 0x25, 0xd1, 0x80,
	0xc7, 0x68, 0xd5, 0xd1, 0xa9, 0x50, 0x03, 0x90, 0x2a, 0xfe, 0x1c, 0x47, 0x5d, 0xcf, 0x37, 0x37,
	0x6b, 0x46, 0x7d, 0xc1, 0xd1, 0x68, 0xd0, 0x0e, 0x40, 0x0f, 0xc7, 0xb4, 0x4d, 0x88, 0x7f, 0x48,
	0xcd, 0x32, 0x77, 0x43, 0x91, 0x64, 0xf3, 0x53, 0xd1, 0xe5, 0xe7, 0x7d, 0x28, 0xb5, 0x48, 0x8f,
	0xcc, 0x58, 0x7a, 0x2c, 0x9d, 0x49, 0x73, 0x99, 0xce, 0x9f, 0x0d, 0xa8, 0x9d, 0x7a, 0xb1, 0xcc,
	0xd1, 0xe3, 0xc1, 0xa1, 0x1a, 0xd8, 0xe1, 0xa1, 0x99, 0x2c, 0x14, 0x74, 0x59, 0xd8, 0x84, 0x85,
	0x9e, 0xd7, 0xf7, 0x28, 0x47, 0x2e, 0x38, 0x62, 0xc1, 0x1c, 0x0a, 0x2e, 0x2e, 0x62, 0x42, 0xcd,
	0x39, 0x2e, 0x96, 0x2b, 0x26, 0x8f, 0x09, 0x8e, 0x3a, 0x2f, 0xcc, 0x79, 0xe1, 0xa8, 0x58, 0xd9,
	0x7f, 0xcd, 0xc1, 0x9a, 0x70, 0x86, 0xb9, 0x75, 0x42, 0x49, 0xff, 0x0d, 0x2f, 0x98, 0xf7, 0x60,
	0x23, 0x21, 0x7a, 0xce, 0x5c, 0x2a, 0x71, 0xdb, 0xac, 0x22, 0xaf, 0xbc, 0x36, 0xff, 0x6d, 0x79,
	0x95, 0x67, 0x2c, 0xaf, 0x4a, 0xba, 0xbc, 0x6c, 0x0c, 0x68, 0x9c, 0xf0, 0xd1, 0xa5, 0xdc, 0x01,
	0xa0, 0x01, 0xc5, 0xbd, 0xa3, 0xe0, 0xca, 0x1f, 0x66, 0x50, 0x91, 0xa0, 0x07, 0x50, 0x8c, 0x48,
	0x7c, 0xd5, 0x63, 0x69, 0x2c, 0xd4, 0x97, 0x0f, 0x4a, 0x0d, 0x1c, 0x7a, 0x8d, 0x64, 0xa2, 0x1c,
	0x69, 0xc2, 0xfb, 0xe2, 0x59, 0xe8, 0xfe, 0x5f, 0xfb, 0x62, 0x92, 0x9a, 0xbc, 0x48, 0xe7, 0x50,
	0x55, 0xfb, 0x25, 0x9b, 0x1b, 0xd3, 0x68, 0x37, 0x01, 0xdc, 0x91, 0x31, 0xbf, 0x1e, 0xcb, 0x07,
	0xeb, 0x4a, 0x5c, 0xf9, 0x19, 0x8a, 0x89, 0x6d, 0x81, 0x99, 0xc5, 0x90, 0xf8, 0x0d, 0xd8, 0x1c,
	0xb5, 0xda, 0x19, 0xc0, 0xed, 0x4f, 0xa1, 0x9c, 0xb2, 0x97, 0x95, 0x90, 0xf4, 0xca, 0x98, 0xee,
	0xd5, 0x39, 0x54, 0xd5, 0x88, 0xfc, 0x57, 0xcc, 0xb3, 0x18, 0x92, 0xf9, 0x43, 0xa8, 0xaa, 0xad,
	0x6d, 0x16, 0xf2, 0x16, 0x98, 0xd9, 0x2d, 0xf2, 0xb8, 0x3f, 0x0d, 0x28, 0x1f, 0x76, 0xa8, 0x77,
	0x3d, 0x73, 0xf9, 0x9a, 0x70, 0xcb, 0x25, 0xd7, 0x87, 0xae, 0x1b, 0x71, 0x2a, 0x4b, 0xce, 0x70,
	0xc9, 0x34, 0x38, 0x0c, 0xdb, 0xec, 0xe5, 0x50, 0x10, 0x1a, 0xb9, 0x64, 0x1a, 0xff, 0xe6, 0x92,
	0x6b, 0x44, 0xff, 0x1b, 0x2e, 0x19, 0xca, 0xc5, 0x91, 0x4f, 0xcf, 0x42, 0x73, 0x81, 0x37, 0x05,
	0xb9, 0x42, 0x16, 0x2c, 0xb2, 0x5f, 0xad, 0xe0, 0xc6, 0x37, 0x8b, 0x5c, 0x33, 0x5a, 0x67, 0x4b,
	0xf7, 0x96, 0xae, 0x74, 0x4d, 0xa8, 0xa4, 0x89, 0x49, 0xce, 0x8f, 0xc0, 0x1a, 0x15, 0x83, 0x34,
	0xf1, 0x02, 0x7f, 0x5a, 0x14, 0x7f, 0x37, 0xe0, 0x8e, 0x76, 0x9b, 0xac, 0x24, 0x25, 0x2e, 0x46,
	0x6e, 0x5c, 0xe6, 0x72, 0xe3, 0x52, 0xc8, 0x8b, 0xcb, 0x7c, 0x6e, 0x5c, 0x16, 0xa6, 0xc5, 0xa5,
	0xa8, 0x8b, 0xcb, 0x43, 0xa8, 0x1e, 0x13, 0xea, 0x60, 0xdf, 0x0d, 0xfa, 0x2d, 0xe1, 0xe1, 0x34,
	0xea, 0x8f, 0xc0, 0xcc, 0x6e, 0x99, 0x46, 0xdb, 0xfe, 0x10, 0xb6, 0xda, 0x34, 0x22, 0xb8, 0x2f,
	0x42, 0xf6, 0x34, 0xc2, 0x7d, 0x72, 0x1a, 0x74, 0xa7, 0x96, 0xeb, 0xaf, 0x06, 0x6c, 0xe7, 0x6c,
	0x94, 0x98, 0x1f, 0xc1, 0xca, 0x55, 0xd8, 0xf3, 0xfc, 0x4b, 0xae, 0x62, 0xd7, 0x76, 0xdc, 0xa4,
	0xcf, 0xc6, 0x8a, 0xd3, 0xa0, 0xeb, 0x24, 0x0c, 0xd1, 0x27, 0xb0, 0xe6, 0x06, 0x37, 0xbe, 0xb2,
	0x55, 0xf4, 0xf7, 0xb2, 0xb8, 0x8d, 0xaa, 0x8a, 0x6d, 0x4e, 0x19, 0xa7, 0x19, 0x3d, 0xb9, 0x26,
	0x3e, 0x9d, 0x85, 0xd1, 0x59, 0x92, 0x90, 0xb2, 0x4f, 0x12, 0x42, 0x30, 0x4f, 0x07, 0x21, 0x91,
	0xdb, 0xf8, 0x6f, 0xd6, 0xec, 0x43, 0x3c, 0xe8, 0x05, 0xd8, 0xfd, 0xac, 0xfd, 0xc5, 0x73, 0x59,
	0x39, 0xaa, 0xe8, 0xe0, 0xb7, 0x15, 0x28, 0x8a, 0x13, 0xd1, 0x57, 0x50, 0x14, 0xbd, 0x12, 0x99,
	0x9c, 0x8a, 0xe6, 0x9d, 0x6e, 0xdd, 0xd6, 0x68, 0xe4, 0x8d, 0xa8, 0xfe, 0xf8, 0xc7, 0xdf, 0xbf,
	0xcc, 0x6d, 0xd8, 0x2b, 0xfc, 0x73, 0x41, 0x74, 0xa2, 0xf8, 0x63, 0x63, 0x0f, 0xb5, 0xa1, 0x70,
	0x4c, 0x28, 0x12, 0xf1, 0x49, 0xbf, 0x84, 0xad, 0x4a, 0x5a, 0x2c, 0x8f, 0xdb, 0xe6, 0xc7, 0x55,
	0x51, 0x59, 0x3d, 0xae, 0xf9, 0x52, 0x44, 0xe3, 0x15, 0xfa, 0x9a, 0xb9, 0xcd, 0xfa, 0x91, 0x74,
	0x56, 0xf3, 0xb2, 0x93, 0xce, 0x6a, 0x1f, 0x71, 0xf2, 0xf4, 0xbd, 0x9c, 0xd3, 0x7f, 0x32, 0xa0,
	0xc4, 0x66, 0x74, 0xea, 0x75, 0x87, 0xee, 0xf1, 0x13, 0xa7, 0xbd, 0xfe, 0xac, 0x6a, 0xca, 0x6c,
	0xdc, 0x78, 0x39, 0xec, 0x03, 0x74, 0x5f, 0x7c, 0x52, 0x8d, 0xf7, 0xc6, 0xcd, 0x97, 0x89, 0x31,
	0xfd, 0x6a, 0xe8, 0x13, 0xfa, 0x06, 0x8a, 0xa2, 0x8f, 0x4b, 0xa2, 0x9a, 0x57, 0x82, 0x24, 0xaa,
	0x1d, 0xb2, 0x35, 0x8e, 0x68, 0x59, 0x7a, 0xa2, 0x2c, 0x3d, 0x21, 0x80, 0xc8, 0x27, 0xff, 0x70,
	0xdb, 0xca, 0x24, 0x58, 0x99, 0x0e, 0xd6, 0x76, 0x8e, 0x56, 0x82, 0xdd, 0xe3, 0x60, 0x77, 0x6d,
	0x4b, 0x0b, 0xd6, 0xbc, 0x24, 0x03, 0x5e, 0x10, 0x2e, 0xdc, 0x3a, 0x26, 0x94, 0xc3, 0xdd, 0x4e,
	0x66, 0x5f, 0xc5, 0xb2, 0x74, 0x2a, 0x09, 0x64, 0x73, 0xa0, 0x2d, 0x34, 0x01, 0x88, 0xf1, 0x12,
	0x11, 0x51, 0x78, 0xe5, 0x4c, 0x5d, 0xc9, 0x2b, 0x77, 0x5e, 0x4a, 0x5e, 0xd6, 0x14, 0x5e, 0x7d,
	0xf6, 0x09, 0xcc, 0x8a, 0x4d, 0x41, 0xcc, 0x99, 0xb3, 0x12, 0x31, 0x77, 0xa4, 0x4a, 0x82, 0x7b,
	0x93, 0x08, 0xfa, 0xb0, 0x38, 0x1c, 0x4e, 0x48, 0x04, 0x4b, 0x3b, 0x84, 0xad, 0x3b, 0x5a, 0x9d,
	0x04, 0xba, 0xcf, 0x81, 0xde, 0xb1, 0x77, 0xf4, 0x40, 0x58, 0xee, 0x62, 0xf4, 0xbe, 0x83, 0xd5,
	0x63, 0x42, 0xc7, 0x53, 0x0b, 0xdd, 0x4d, 0x66, 0x28, 0x33, 0x06, 0xad, 0x5a, 0xbe, 0x81, 0x84,
	0xaf, 0x73, 0x78, 0x1b, 0xd5, 0x26, 0xc2, 0x33, 0xb0, 0xef, 0xf9, 0x57, 0x74, 0x62, 0x7e, 0xc8,
	0x10, 0xe7, 0x4c, 0x22, 0x19, 0xe2, 0xbc, 0xa1, 0x63, 0x37, 0x38, 0x74, 0xdd, 0x7e, 0x57, 0x0f,
	0xdd, 0x4d, 0x83, 0xfd, 0x60, 0xc0, 0xba, 0xe8, 0xc0, 0xa3, 0x61, 0x82, 0xde, 0xe6, 0x10, 0x93,
	0x26, 0x94, 0x65, 0x4f, 0x32, 0x91, 0xae, 0xec, 0x72, 0x57, 0x76, 0xd0, 0x96, 0xde, 0x95, 0x0b,
	0x3e, 0x39, 0xf6, 0x0d, 0xc5, 0x85, 0x51, 0xfb, 0xd7, 0xb8, 0x90, 0x1e, 0x29, 0x1a, 0x17, 0x32,
	0xd3, 0x63, 0x9a, 0x0b, 0x84, 0x6d, 0x88, 0xf7, 0x8d, 0xf3, 0x22, 0xff, 0xb7, 0xe7, 0x83, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x47, 0xbd, 0x38, 0x2e, 0x12, 0x00, 0x00,
}
