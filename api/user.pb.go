// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Defines the organizations that the user is associated with.
type OrganizationLink struct {
	OrganizationID       int64    `protobuf:"varint,1,opt,name=organizationID" json:"organizationID,omitempty"`
	OrganizationName     string   `protobuf:"bytes,2,opt,name=organizationName" json:"organizationName,omitempty"`
	IsAdmin              bool     `protobuf:"varint,3,opt,name=isAdmin" json:"isAdmin,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,5,opt,name=updatedAt" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationLink) Reset()         { *m = OrganizationLink{} }
func (m *OrganizationLink) String() string { return proto.CompactTextString(m) }
func (*OrganizationLink) ProtoMessage()    {}
func (*OrganizationLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{0}
}
func (m *OrganizationLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationLink.Unmarshal(m, b)
}
func (m *OrganizationLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationLink.Marshal(b, m, deterministic)
}
func (dst *OrganizationLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationLink.Merge(dst, src)
}
func (m *OrganizationLink) XXX_Size() int {
	return xxx_messageInfo_OrganizationLink.Size(m)
}
func (m *OrganizationLink) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationLink.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationLink proto.InternalMessageInfo

func (m *OrganizationLink) GetOrganizationID() int64 {
	if m != nil {
		return m.OrganizationID
	}
	return 0
}

func (m *OrganizationLink) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *OrganizationLink) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *OrganizationLink) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *OrganizationLink) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// The request for profile requires not input as the profile is returned for
// the logged in user based on the JWT token passed in.
type ProfileRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileRequest) Reset()         { *m = ProfileRequest{} }
func (m *ProfileRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileRequest) ProtoMessage()    {}
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{1}
}
func (m *ProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileRequest.Unmarshal(m, b)
}
func (m *ProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileRequest.Marshal(b, m, deterministic)
}
func (dst *ProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileRequest.Merge(dst, src)
}
func (m *ProfileRequest) XXX_Size() int {
	return xxx_messageInfo_ProfileRequest.Size(m)
}
func (m *ProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileRequest proto.InternalMessageInfo

// The user's profile. This specifies the access the user has to the data
// and should be used limit what the UI presents as options (e.g., read-only
// access to an application should not allow an "edit" button on that
// application).
type ProfileResponse struct {
	User                 *GetUserResponse    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Organizations        []*OrganizationLink `protobuf:"bytes,3,rep,name=organizations" json:"organizations,omitempty"`
	Settings             *ProfileSettings    `protobuf:"bytes,4,opt,name=settings" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProfileResponse) Reset()         { *m = ProfileResponse{} }
func (m *ProfileResponse) String() string { return proto.CompactTextString(m) }
func (*ProfileResponse) ProtoMessage()    {}
func (*ProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{2}
}
func (m *ProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileResponse.Unmarshal(m, b)
}
func (m *ProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileResponse.Marshal(b, m, deterministic)
}
func (dst *ProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileResponse.Merge(dst, src)
}
func (m *ProfileResponse) XXX_Size() int {
	return xxx_messageInfo_ProfileResponse.Size(m)
}
func (m *ProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileResponse proto.InternalMessageInfo

func (m *ProfileResponse) GetUser() *GetUserResponse {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ProfileResponse) GetOrganizations() []*OrganizationLink {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func (m *ProfileResponse) GetSettings() *ProfileSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type ProfileSettings struct {
	// Existing users in the system can not be assigned to organizations and
	// application and can not be listed by non global admin users.
	DisableAssignExistingUsers bool     `protobuf:"varint,1,opt,name=disableAssignExistingUsers" json:"disableAssignExistingUsers,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *ProfileSettings) Reset()         { *m = ProfileSettings{} }
func (m *ProfileSettings) String() string { return proto.CompactTextString(m) }
func (*ProfileSettings) ProtoMessage()    {}
func (*ProfileSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{3}
}
func (m *ProfileSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSettings.Unmarshal(m, b)
}
func (m *ProfileSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSettings.Marshal(b, m, deterministic)
}
func (dst *ProfileSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSettings.Merge(dst, src)
}
func (m *ProfileSettings) XXX_Size() int {
	return xxx_messageInfo_ProfileSettings.Size(m)
}
func (m *ProfileSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSettings proto.InternalMessageInfo

func (m *ProfileSettings) GetDisableAssignExistingUsers() bool {
	if m != nil {
		return m.DisableAssignExistingUsers
	}
	return false
}

// The data for logging in to the system.  The connection is expected to be
// protected by SSL, allowing us to use the username and password in the clear.
type LoginRequest struct {
	// Username of the user.
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	// Password of the user.
	Password             string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{4}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response to the login request upon success. The jwt token is to be
// placed in the header field named "Grpc-Metadata-Authorization" for all
// subsequent queries to the server.
type LoginResponse struct {
	// The JWT tag to be used to access lora-app-server interfaces.
	Jwt                  string   `protobuf:"bytes,1,opt,name=jwt" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{5}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

// Request the users defined in the system.
type ListUserRequest struct {
	// Max number of user to return in the result-set.
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// When provided, the given string will be used to search on username.
	Search               string   `protobuf:"bytes,3,opt,name=search" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserRequest) Reset()         { *m = ListUserRequest{} }
func (m *ListUserRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserRequest) ProtoMessage()    {}
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{6}
}
func (m *ListUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserRequest.Unmarshal(m, b)
}
func (m *ListUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserRequest.Marshal(b, m, deterministic)
}
func (dst *ListUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserRequest.Merge(dst, src)
}
func (m *ListUserRequest) XXX_Size() int {
	return xxx_messageInfo_ListUserRequest.Size(m)
}
func (m *ListUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserRequest proto.InternalMessageInfo

func (m *ListUserRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListUserRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListUserRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

// Request the user information.
type UserRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{7}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (dst *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(dst, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AddUserResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserResponse) Reset()         { *m = AddUserResponse{} }
func (m *AddUserResponse) String() string { return proto.CompactTextString(m) }
func (*AddUserResponse) ProtoMessage()    {}
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{8}
}
func (m *AddUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserResponse.Unmarshal(m, b)
}
func (m *AddUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserResponse.Marshal(b, m, deterministic)
}
func (dst *AddUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserResponse.Merge(dst, src)
}
func (m *AddUserResponse) XXX_Size() int {
	return xxx_messageInfo_AddUserResponse.Size(m)
}
func (m *AddUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserResponse proto.InternalMessageInfo

func (m *AddUserResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// User data not including the data access profile.
type UserSettings struct {
	// ID of the user.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Username of the user.
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// The session timeout, in minutes.
	SessionTTL int32 `protobuf:"varint,3,opt,name=sessionTTL" json:"sessionTTL,omitempty"`
	// If the user is a system admin, capable of creating other users.
	IsAdmin bool `protobuf:"varint,4,opt,name=isAdmin" json:"isAdmin,omitempty"`
	// If the user is active.
	IsActive bool `protobuf:"varint,5,opt,name=isActive" json:"isActive,omitempty"`
	// When the user was created.
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt" json:"createdAt,omitempty"`
	// When the user was last updated (excludes changes in application access).
	UpdatedAt            string   `protobuf:"bytes,7,opt,name=updatedAt" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSettings) Reset()         { *m = UserSettings{} }
func (m *UserSettings) String() string { return proto.CompactTextString(m) }
func (*UserSettings) ProtoMessage()    {}
func (*UserSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{9}
}
func (m *UserSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSettings.Unmarshal(m, b)
}
func (m *UserSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSettings.Marshal(b, m, deterministic)
}
func (dst *UserSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSettings.Merge(dst, src)
}
func (m *UserSettings) XXX_Size() int {
	return xxx_messageInfo_UserSettings.Size(m)
}
func (m *UserSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSettings.DiscardUnknown(m)
}

var xxx_messageInfo_UserSettings proto.InternalMessageInfo

func (m *UserSettings) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserSettings) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserSettings) GetSessionTTL() int32 {
	if m != nil {
		return m.SessionTTL
	}
	return 0
}

func (m *UserSettings) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *UserSettings) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *UserSettings) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *UserSettings) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type GetUserResponse struct {
	// ID of the user.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Username of the user.
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// The session timeout, in minutes.
	SessionTTL int32 `protobuf:"varint,3,opt,name=sessionTTL" json:"sessionTTL,omitempty"`
	// If the user is a system admin, capable of creating other users.
	IsAdmin bool `protobuf:"varint,4,opt,name=isAdmin" json:"isAdmin,omitempty"`
	// If the user is active.
	IsActive bool `protobuf:"varint,5,opt,name=isActive" json:"isActive,omitempty"`
	// When the user was created.
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt" json:"createdAt,omitempty"`
	// When the user was last updated (excludes changes in application access).
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt" json:"updatedAt,omitempty"`
	// E-mail of the user.
	Email string `protobuf:"bytes,8,opt,name=email" json:"email,omitempty"`
	// Optional note to store with the user.
	Note                 string   `protobuf:"bytes,9,opt,name=note" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{10}
}
func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (dst *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(dst, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetUserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetUserResponse) GetSessionTTL() int32 {
	if m != nil {
		return m.SessionTTL
	}
	return 0
}

func (m *GetUserResponse) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *GetUserResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *GetUserResponse) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *GetUserResponse) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *GetUserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserResponse) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

// Add a new user. Not quite the UserSettings data as it includes a password
// and excludes the ID and create/update dates.
type AddUserRequest struct {
	// Username of the user.
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	// Passowrd of the user.
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	// The session timeout, in minutes.
	SessionTTL int32 `protobuf:"varint,3,opt,name=sessionTTL" json:"sessionTTL,omitempty"`
	// If the user is a system-wide admin.
	IsAdmin bool `protobuf:"varint,4,opt,name=isAdmin" json:"isAdmin,omitempty"`
	// If the user is active.
	IsActive bool `protobuf:"varint,5,opt,name=isActive" json:"isActive,omitempty"`
	// Add the user to the following organizations.
	Organizations []*AddUserOrganization `protobuf:"bytes,6,rep,name=organizations" json:"organizations,omitempty"`
	// E-mail of the user.
	Email string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	// Optional note to store with the user.
	Note                 string   `protobuf:"bytes,8,opt,name=note" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{11}
}
func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (dst *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(dst, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserRequest) GetSessionTTL() int32 {
	if m != nil {
		return m.SessionTTL
	}
	return 0
}

func (m *AddUserRequest) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *AddUserRequest) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *AddUserRequest) GetOrganizations() []*AddUserOrganization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func (m *AddUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddUserRequest) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type AddUserOrganization struct {
	// ID of the organization.
	OrganizationID int64 `protobuf:"varint,1,opt,name=organizationID" json:"organizationID,omitempty"`
	// User has admin rights within the organization.
	IsAdmin              bool     `protobuf:"varint,2,opt,name=isAdmin" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserOrganization) Reset()         { *m = AddUserOrganization{} }
func (m *AddUserOrganization) String() string { return proto.CompactTextString(m) }
func (*AddUserOrganization) ProtoMessage()    {}
func (*AddUserOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{12}
}
func (m *AddUserOrganization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserOrganization.Unmarshal(m, b)
}
func (m *AddUserOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserOrganization.Marshal(b, m, deterministic)
}
func (dst *AddUserOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserOrganization.Merge(dst, src)
}
func (m *AddUserOrganization) XXX_Size() int {
	return xxx_messageInfo_AddUserOrganization.Size(m)
}
func (m *AddUserOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserOrganization proto.InternalMessageInfo

func (m *AddUserOrganization) GetOrganizationID() int64 {
	if m != nil {
		return m.OrganizationID
	}
	return 0
}

func (m *AddUserOrganization) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

// Not quite the AddUserRequest as no password.
type UpdateUserRequest struct {
	// The ID of the user to be updated.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The new username.
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// The session timeout, in minutes.
	SessionTTL int32 `protobuf:"varint,3,opt,name=sessionTTL" json:"sessionTTL,omitempty"`
	// If the user is a system-wide admin.
	IsAdmin bool `protobuf:"varint,4,opt,name=isAdmin" json:"isAdmin,omitempty"`
	// If the user is active.
	IsActive bool `protobuf:"varint,5,opt,name=isActive" json:"isActive,omitempty"`
	// E-mail of the user.
	Email string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	// Optional note to store with the user.
	Note                 string   `protobuf:"bytes,7,opt,name=note" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{13}
}
func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(dst, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateUserRequest) GetSessionTTL() int32 {
	if m != nil {
		return m.SessionTTL
	}
	return 0
}

func (m *UpdateUserRequest) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *UpdateUserRequest) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *UpdateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserRequest) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type ListUserResponse struct {
	TotalCount           int32              `protobuf:"varint,1,opt,name=totalCount" json:"totalCount,omitempty"`
	Result               []*GetUserResponse `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListUserResponse) Reset()         { *m = ListUserResponse{} }
func (m *ListUserResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserResponse) ProtoMessage()    {}
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{14}
}
func (m *ListUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserResponse.Unmarshal(m, b)
}
func (m *ListUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserResponse.Marshal(b, m, deterministic)
}
func (dst *ListUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserResponse.Merge(dst, src)
}
func (m *ListUserResponse) XXX_Size() int {
	return xxx_messageInfo_ListUserResponse.Size(m)
}
func (m *ListUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserResponse proto.InternalMessageInfo

func (m *ListUserResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListUserResponse) GetResult() []*GetUserResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type UserEmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEmptyResponse) Reset()         { *m = UserEmptyResponse{} }
func (m *UserEmptyResponse) String() string { return proto.CompactTextString(m) }
func (*UserEmptyResponse) ProtoMessage()    {}
func (*UserEmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{15}
}
func (m *UserEmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEmptyResponse.Unmarshal(m, b)
}
func (m *UserEmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEmptyResponse.Marshal(b, m, deterministic)
}
func (dst *UserEmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEmptyResponse.Merge(dst, src)
}
func (m *UserEmptyResponse) XXX_Size() int {
	return xxx_messageInfo_UserEmptyResponse.Size(m)
}
func (m *UserEmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserEmptyResponse proto.InternalMessageInfo

type UpdateUserPasswordRequest struct {
	// The ID of the user for which to update the password.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The new password to set.
	Password             string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserPasswordRequest) Reset()         { *m = UpdateUserPasswordRequest{} }
func (m *UpdateUserPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserPasswordRequest) ProtoMessage()    {}
func (*UpdateUserPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{16}
}
func (m *UpdateUserPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserPasswordRequest.Unmarshal(m, b)
}
func (m *UpdateUserPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserPasswordRequest.Merge(dst, src)
}
func (m *UpdateUserPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserPasswordRequest.Size(m)
}
func (m *UpdateUserPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserPasswordRequest proto.InternalMessageInfo

func (m *UpdateUserPasswordRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUserPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The request for branding
type BrandingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrandingRequest) Reset()         { *m = BrandingRequest{} }
func (m *BrandingRequest) String() string { return proto.CompactTextString(m) }
func (*BrandingRequest) ProtoMessage()    {}
func (*BrandingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{17}
}
func (m *BrandingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandingRequest.Unmarshal(m, b)
}
func (m *BrandingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandingRequest.Marshal(b, m, deterministic)
}
func (dst *BrandingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandingRequest.Merge(dst, src)
}
func (m *BrandingRequest) XXX_Size() int {
	return xxx_messageInfo_BrandingRequest.Size(m)
}
func (m *BrandingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrandingRequest proto.InternalMessageInfo

// The branding data.
type BrandingResponse struct {
	Logo                 string   `protobuf:"bytes,1,opt,name=logo" json:"logo,omitempty"`
	Registration         string   `protobuf:"bytes,2,opt,name=registration" json:"registration,omitempty"`
	Footer               string   `protobuf:"bytes,3,opt,name=footer" json:"footer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrandingResponse) Reset()         { *m = BrandingResponse{} }
func (m *BrandingResponse) String() string { return proto.CompactTextString(m) }
func (*BrandingResponse) ProtoMessage()    {}
func (*BrandingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{18}
}
func (m *BrandingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandingResponse.Unmarshal(m, b)
}
func (m *BrandingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandingResponse.Marshal(b, m, deterministic)
}
func (dst *BrandingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandingResponse.Merge(dst, src)
}
func (m *BrandingResponse) XXX_Size() int {
	return xxx_messageInfo_BrandingResponse.Size(m)
}
func (m *BrandingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BrandingResponse proto.InternalMessageInfo

func (m *BrandingResponse) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *BrandingResponse) GetRegistration() string {
	if m != nil {
		return m.Registration
	}
	return ""
}

func (m *BrandingResponse) GetFooter() string {
	if m != nil {
		return m.Footer
	}
	return ""
}

type GlobalSearchRequest struct {
	// Search query.
	Search string `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	// Max number of results to return.
	Limit int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	// Offset offset of the result-set (for pagination).
	Offset               int64    `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalSearchRequest) Reset()         { *m = GlobalSearchRequest{} }
func (m *GlobalSearchRequest) String() string { return proto.CompactTextString(m) }
func (*GlobalSearchRequest) ProtoMessage()    {}
func (*GlobalSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{19}
}
func (m *GlobalSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalSearchRequest.Unmarshal(m, b)
}
func (m *GlobalSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalSearchRequest.Marshal(b, m, deterministic)
}
func (dst *GlobalSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSearchRequest.Merge(dst, src)
}
func (m *GlobalSearchRequest) XXX_Size() int {
	return xxx_messageInfo_GlobalSearchRequest.Size(m)
}
func (m *GlobalSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSearchRequest proto.InternalMessageInfo

func (m *GlobalSearchRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *GlobalSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GlobalSearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GlobalSearchResponse struct {
	Result               []*GlobalSearchResult `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GlobalSearchResponse) Reset()         { *m = GlobalSearchResponse{} }
func (m *GlobalSearchResponse) String() string { return proto.CompactTextString(m) }
func (*GlobalSearchResponse) ProtoMessage()    {}
func (*GlobalSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{20}
}
func (m *GlobalSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalSearchResponse.Unmarshal(m, b)
}
func (m *GlobalSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalSearchResponse.Marshal(b, m, deterministic)
}
func (dst *GlobalSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSearchResponse.Merge(dst, src)
}
func (m *GlobalSearchResponse) XXX_Size() int {
	return xxx_messageInfo_GlobalSearchResponse.Size(m)
}
func (m *GlobalSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSearchResponse proto.InternalMessageInfo

func (m *GlobalSearchResponse) GetResult() []*GlobalSearchResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GlobalSearchResult struct {
	// Record kind.
	Kind string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Search score.
	Score float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
	// Organization id.
	OrganizationID int64 `protobuf:"varint,3,opt,name=organizationID" json:"organizationID,omitempty"`
	// Organization name.
	OrganizationName string `protobuf:"bytes,4,opt,name=organizationName" json:"organizationName,omitempty"`
	// Application id.
	ApplicationID int64 `protobuf:"varint,5,opt,name=applicationID" json:"applicationID,omitempty"`
	// Application name.
	ApplicationName string `protobuf:"bytes,6,opt,name=applicationName" json:"applicationName,omitempty"`
	// Device DevEUI (hex encoded).
	DeviceDevEUI string `protobuf:"bytes,7,opt,name=deviceDevEUI" json:"deviceDevEUI,omitempty"`
	// Device name.
	DeviceName string `protobuf:"bytes,8,opt,name=deviceName" json:"deviceName,omitempty"`
	// Gateway MAC (hex encoded).
	GatewayMAC string `protobuf:"bytes,9,opt,name=gatewayMAC" json:"gatewayMAC,omitempty"`
	// Gateway name.
	GatewayName          string   `protobuf:"bytes,10,opt,name=gatewayName" json:"gatewayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalSearchResult) Reset()         { *m = GlobalSearchResult{} }
func (m *GlobalSearchResult) String() string { return proto.CompactTextString(m) }
func (*GlobalSearchResult) ProtoMessage()    {}
func (*GlobalSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95e81eb7e920e22d, []int{21}
}
func (m *GlobalSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalSearchResult.Unmarshal(m, b)
}
func (m *GlobalSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalSearchResult.Marshal(b, m, deterministic)
}
func (dst *GlobalSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSearchResult.Merge(dst, src)
}
func (m *GlobalSearchResult) XXX_Size() int {
	return xxx_messageInfo_GlobalSearchResult.Size(m)
}
func (m *GlobalSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSearchResult proto.InternalMessageInfo

func (m *GlobalSearchResult) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *GlobalSearchResult) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GlobalSearchResult) GetOrganizationID() int64 {
	if m != nil {
		return m.OrganizationID
	}
	return 0
}

func (m *GlobalSearchResult) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *GlobalSearchResult) GetApplicationID() int64 {
	if m != nil {
		return m.ApplicationID
	}
	return 0
}

func (m *GlobalSearchResult) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

func (m *GlobalSearchResult) GetDeviceDevEUI() string {
	if m != nil {
		return m.DeviceDevEUI
	}
	return ""
}

func (m *GlobalSearchResult) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *GlobalSearchResult) GetGatewayMAC() string {
	if m != nil {
		return m.GatewayMAC
	}
	return ""
}

func (m *GlobalSearchResult) GetGatewayName() string {
	if m != nil {
		return m.GatewayName
	}
	return ""
}

func init() {
	proto.RegisterType((*OrganizationLink)(nil), "api.OrganizationLink")
	proto.RegisterType((*ProfileRequest)(nil), "api.ProfileRequest")
	proto.RegisterType((*ProfileResponse)(nil), "api.ProfileResponse")
	proto.RegisterType((*ProfileSettings)(nil), "api.ProfileSettings")
	proto.RegisterType((*LoginRequest)(nil), "api.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "api.LoginResponse")
	proto.RegisterType((*ListUserRequest)(nil), "api.ListUserRequest")
	proto.RegisterType((*UserRequest)(nil), "api.UserRequest")
	proto.RegisterType((*AddUserResponse)(nil), "api.AddUserResponse")
	proto.RegisterType((*UserSettings)(nil), "api.UserSettings")
	proto.RegisterType((*GetUserResponse)(nil), "api.GetUserResponse")
	proto.RegisterType((*AddUserRequest)(nil), "api.AddUserRequest")
	proto.RegisterType((*AddUserOrganization)(nil), "api.AddUserOrganization")
	proto.RegisterType((*UpdateUserRequest)(nil), "api.UpdateUserRequest")
	proto.RegisterType((*ListUserResponse)(nil), "api.ListUserResponse")
	proto.RegisterType((*UserEmptyResponse)(nil), "api.UserEmptyResponse")
	proto.RegisterType((*UpdateUserPasswordRequest)(nil), "api.UpdateUserPasswordRequest")
	proto.RegisterType((*BrandingRequest)(nil), "api.BrandingRequest")
	proto.RegisterType((*BrandingResponse)(nil), "api.BrandingResponse")
	proto.RegisterType((*GlobalSearchRequest)(nil), "api.GlobalSearchRequest")
	proto.RegisterType((*GlobalSearchResponse)(nil), "api.GlobalSearchResponse")
	proto.RegisterType((*GlobalSearchResult)(nil), "api.GlobalSearchResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	// Get user list.
	List(ctx context.Context, in *ListUserRequest, opts ...grpc.CallOption) (*ListUserResponse, error)
	// Get data for a particular user.
	Get(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	// Create a new user.
	Create(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error)
	// Update an existing user.
	Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error)
	// Delete a user.
	Delete(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error)
	// UpdatePassword updates a password.
	UpdatePassword(ctx context.Context, in *UpdateUserPasswordRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) List(ctx context.Context, in *ListUserRequest, opts ...grpc.CallOption) (*ListUserResponse, error) {
	out := new(ListUserResponse)
	err := grpc.Invoke(ctx, "/api.User/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Get(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/api.User/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Create(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error) {
	out := new(AddUserResponse)
	err := grpc.Invoke(ctx, "/api.User/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error) {
	out := new(UserEmptyResponse)
	err := grpc.Invoke(ctx, "/api.User/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Delete(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error) {
	out := new(UserEmptyResponse)
	err := grpc.Invoke(ctx, "/api.User/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdatePassword(ctx context.Context, in *UpdateUserPasswordRequest, opts ...grpc.CallOption) (*UserEmptyResponse, error) {
	out := new(UserEmptyResponse)
	err := grpc.Invoke(ctx, "/api.User/UpdatePassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	// Get user list.
	List(context.Context, *ListUserRequest) (*ListUserResponse, error)
	// Get data for a particular user.
	Get(context.Context, *UserRequest) (*GetUserResponse, error)
	// Create a new user.
	Create(context.Context, *AddUserRequest) (*AddUserResponse, error)
	// Update an existing user.
	Update(context.Context, *UpdateUserRequest) (*UserEmptyResponse, error)
	// Delete a user.
	Delete(context.Context, *UserRequest) (*UserEmptyResponse, error)
	// UpdatePassword updates a password.
	UpdatePassword(context.Context, *UpdateUserPasswordRequest) (*UserEmptyResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).List(ctx, req.(*ListUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Get(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Create(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Update(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Delete(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.User/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdatePassword(ctx, req.(*UpdateUserPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _User_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _User_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _User_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _User_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _User_Delete_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _User_UpdatePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

// Client API for Internal service

type InternalClient interface {
	// Log in a user
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Get the current user's profile
	Profile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error)
	// Get the branding for the UI
	Branding(ctx context.Context, in *BrandingRequest, opts ...grpc.CallOption) (*BrandingResponse, error)
	// Perform a global search.
	GlobalSearch(ctx context.Context, in *GlobalSearchRequest, opts ...grpc.CallOption) (*GlobalSearchResponse, error)
}

type internalClient struct {
	cc *grpc.ClientConn
}

func NewInternalClient(cc *grpc.ClientConn) InternalClient {
	return &internalClient{cc}
}

func (c *internalClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/api.Internal/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalClient) Profile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error) {
	out := new(ProfileResponse)
	err := grpc.Invoke(ctx, "/api.Internal/Profile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalClient) Branding(ctx context.Context, in *BrandingRequest, opts ...grpc.CallOption) (*BrandingResponse, error) {
	out := new(BrandingResponse)
	err := grpc.Invoke(ctx, "/api.Internal/Branding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalClient) GlobalSearch(ctx context.Context, in *GlobalSearchRequest, opts ...grpc.CallOption) (*GlobalSearchResponse, error) {
	out := new(GlobalSearchResponse)
	err := grpc.Invoke(ctx, "/api.Internal/GlobalSearch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Internal service

type InternalServer interface {
	// Log in a user
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// Get the current user's profile
	Profile(context.Context, *ProfileRequest) (*ProfileResponse, error)
	// Get the branding for the UI
	Branding(context.Context, *BrandingRequest) (*BrandingResponse, error)
	// Perform a global search.
	GlobalSearch(context.Context, *GlobalSearchRequest) (*GlobalSearchResponse, error)
}

func RegisterInternalServer(s *grpc.Server, srv InternalServer) {
	s.RegisterService(&_Internal_serviceDesc, srv)
}

func _Internal_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Internal_Profile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).Profile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/Profile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).Profile(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Internal_Branding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrandingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).Branding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/Branding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).Branding(ctx, req.(*BrandingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Internal_GlobalSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GlobalSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).GlobalSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/GlobalSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).GlobalSearch(ctx, req.(*GlobalSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Internal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Internal",
	HandlerType: (*InternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Internal_Login_Handler,
		},
		{
			MethodName: "Profile",
			Handler:    _Internal_Profile_Handler,
		},
		{
			MethodName: "Branding",
			Handler:    _Internal_Branding_Handler,
		},
		{
			MethodName: "GlobalSearch",
			Handler:    _Internal_GlobalSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_95e81eb7e920e22d) }

var fileDescriptor_user_95e81eb7e920e22d = []byte{
	// 1160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4d, 0x6f, 0xeb, 0x44,
	0x17, 0x96, 0xed, 0x24, 0x4d, 0x4f, 0x3f, 0x92, 0x4e, 0xd3, 0xd6, 0xd7, 0x6a, 0xab, 0xbe, 0x7e,
	0x11, 0x8a, 0x2a, 0xd4, 0xa0, 0xb2, 0xbb, 0x48, 0x57, 0x0a, 0x6d, 0x6f, 0x54, 0x28, 0x97, 0xe2,
	0xb6, 0xea, 0x82, 0x0d, 0x6e, 0x3c, 0x0d, 0xc3, 0x75, 0x3c, 0xc6, 0x33, 0x69, 0xb9, 0x20, 0x36,
	0xac, 0xd8, 0xf3, 0x2f, 0xf8, 0x0d, 0x48, 0xfc, 0x01, 0x76, 0xfc, 0x05, 0x16, 0x48, 0xac, 0x59,
	0xb0, 0x43, 0xf3, 0x61, 0x67, 0xec, 0x26, 0xd5, 0x95, 0x10, 0x42, 0xec, 0x7c, 0x9e, 0x39, 0x79,
	0xce, 0xc7, 0x9c, 0x79, 0x66, 0x02, 0x30, 0x61, 0x38, 0x3b, 0x48, 0x33, 0xca, 0x29, 0x72, 0xc2,
	0x94, 0x78, 0xdb, 0x23, 0x4a, 0x47, 0x31, 0xee, 0x85, 0x29, 0xe9, 0x85, 0x49, 0x42, 0x79, 0xc8,
	0x09, 0x4d, 0x98, 0x72, 0xf1, 0x7f, 0xb4, 0xa0, 0xfd, 0x51, 0x36, 0x0a, 0x13, 0xf2, 0x95, 0xc4,
	0xcf, 0x48, 0xf2, 0x12, 0xbd, 0x09, 0xab, 0xd4, 0xc0, 0x4e, 0x8f, 0x5d, 0x6b, 0xcf, 0xea, 0x3a,
	0x41, 0x05, 0x45, 0xfb, 0xd0, 0x36, 0x91, 0x17, 0xe1, 0x18, 0xbb, 0xf6, 0x9e, 0xd5, 0x5d, 0x0c,
	0x1e, 0xe0, 0xc8, 0x85, 0x05, 0xc2, 0xfa, 0xd1, 0x98, 0x24, 0xae, 0xb3, 0x67, 0x75, 0x9b, 0x41,
	0x6e, 0xa2, 0x6d, 0x58, 0x1c, 0x66, 0x38, 0xe4, 0x38, 0xea, 0x73, 0xb7, 0x26, 0x7f, 0x3e, 0x05,
	0xc4, 0xea, 0x24, 0x8d, 0xf4, 0x6a, 0x5d, 0xad, 0x16, 0x80, 0xdf, 0x86, 0xd5, 0xf3, 0x8c, 0xde,
	0x92, 0x18, 0x07, 0xf8, 0x8b, 0x09, 0x66, 0xdc, 0xff, 0xc1, 0x82, 0x56, 0x01, 0xb1, 0x94, 0x26,
	0x0c, 0xa3, 0x2e, 0xd4, 0x44, 0x57, 0x64, 0x15, 0x4b, 0x87, 0x9d, 0x83, 0x30, 0x25, 0x07, 0x03,
	0xcc, 0xaf, 0x18, 0xce, 0x72, 0x9f, 0x40, 0x7a, 0xa0, 0x77, 0x61, 0xc5, 0xcc, 0x9c, 0xb9, 0xce,
	0x9e, 0xd3, 0x5d, 0x3a, 0xdc, 0x90, 0x3f, 0xa9, 0xf6, 0x29, 0x28, 0xfb, 0xa2, 0xb7, 0xa1, 0xc9,
	0x30, 0xe7, 0x24, 0x19, 0x31, 0x59, 0x47, 0x1e, 0x4a, 0xa7, 0x73, 0xa1, 0xd7, 0x82, 0xc2, 0xcb,
	0xff, 0xb8, 0xc8, 0x35, 0x5f, 0x44, 0xcf, 0xc0, 0x8b, 0x08, 0x0b, 0x6f, 0x62, 0xdc, 0x67, 0x8c,
	0x8c, 0x92, 0x93, 0x2f, 0x09, 0x13, 0x2b, 0x22, 0x59, 0x26, 0x2b, 0x68, 0x06, 0x8f, 0x78, 0xf8,
	0xcf, 0x61, 0xf9, 0x8c, 0x8e, 0x48, 0xa2, 0xfb, 0x81, 0x3c, 0x68, 0x8a, 0xca, 0x12, 0xb1, 0x37,
	0x96, 0x6c, 0x5f, 0x61, 0x8b, 0xb5, 0x34, 0x64, 0xec, 0x9e, 0x66, 0x91, 0xde, 0xb7, 0xc2, 0xf6,
	0xff, 0x07, 0x2b, 0x9a, 0x47, 0x37, 0xb1, 0x0d, 0xce, 0xe7, 0xf7, 0x5c, 0x73, 0x88, 0x4f, 0xff,
	0x1a, 0x5a, 0x67, 0x84, 0xe9, 0x36, 0xaa, 0x68, 0x1d, 0xa8, 0xc7, 0x64, 0x4c, 0x94, 0x5b, 0x3d,
	0x50, 0x06, 0xda, 0x84, 0x06, 0xbd, 0xbd, 0x65, 0x98, 0xcb, 0x28, 0xf5, 0x40, 0x5b, 0x02, 0x67,
	0x38, 0xcc, 0x86, 0x9f, 0xc9, 0x91, 0x58, 0x0c, 0xb4, 0xe5, 0xef, 0xc0, 0x92, 0x49, 0xba, 0x0a,
	0x36, 0x89, 0xf4, 0x08, 0xda, 0x44, 0xa4, 0xd6, 0xea, 0x47, 0x91, 0xb9, 0x7b, 0x0f, 0x5c, 0x7e,
	0xb6, 0x60, 0x59, 0x38, 0x14, 0x6d, 0xad, 0x38, 0x94, 0xda, 0x62, 0x57, 0xda, 0xb2, 0x0b, 0xc0,
	0x30, 0x63, 0x84, 0x26, 0x97, 0x97, 0x67, 0x32, 0xb5, 0x7a, 0x60, 0x20, 0xe6, 0x28, 0xd7, 0xca,
	0xa3, 0xec, 0x41, 0x93, 0xb0, 0xfe, 0x90, 0x93, 0x3b, 0x2c, 0x67, 0xb5, 0x19, 0x14, 0x76, 0x79,
	0xcc, 0x1b, 0x8f, 0x8e, 0xf9, 0x42, 0x75, 0xcc, 0xff, 0xb4, 0xa0, 0x55, 0x19, 0xd8, 0xff, 0x76,
	0x45, 0x62, 0x50, 0xf0, 0x38, 0x24, 0xb1, 0xdb, 0x94, 0x2b, 0xca, 0x40, 0x08, 0x6a, 0x09, 0xe5,
	0xd8, 0x5d, 0x94, 0xa0, 0xfc, 0xf6, 0xbf, 0xb3, 0x61, 0xb5, 0xd8, 0xee, 0xbf, 0x35, 0xd3, 0xff,
	0x50, 0x1b, 0x9e, 0x55, 0x35, 0xa3, 0x21, 0x35, 0xc3, 0x95, 0x67, 0x5f, 0x67, 0x6e, 0x4a, 0x47,
	0x55, 0x36, 0x8a, 0x56, 0x2c, 0xcc, 0x6a, 0x45, 0xd3, 0x68, 0xc5, 0x35, 0xac, 0xcf, 0xe0, 0x7b,
	0x6d, 0xb9, 0x36, 0xca, 0xb3, 0x4b, 0xe5, 0xf9, 0x3f, 0x59, 0xb0, 0x76, 0x25, 0xf7, 0xe6, 0x91,
	0x73, 0xf7, 0x2f, 0x4c, 0x58, 0xd1, 0x9a, 0xc6, 0xac, 0xd6, 0x2c, 0x18, 0xad, 0xf9, 0x14, 0xda,
	0x53, 0x2d, 0xd2, 0x27, 0x64, 0x17, 0x80, 0x53, 0x1e, 0xc6, 0x47, 0x74, 0x92, 0xe4, 0x8a, 0x64,
	0x20, 0xe8, 0x2d, 0x68, 0x64, 0x98, 0x4d, 0x62, 0x21, 0x4b, 0xce, 0xdc, 0x8b, 0x41, 0xfb, 0xf8,
	0xeb, 0xb0, 0x26, 0xf0, 0x93, 0x71, 0xca, 0x5f, 0xe5, 0x8b, 0xfe, 0x00, 0x9e, 0x4c, 0xfb, 0x76,
	0xae, 0xe7, 0xec, 0x91, 0xfe, 0xcd, 0x95, 0xdb, 0x35, 0x68, 0xbd, 0x97, 0x85, 0x49, 0x44, 0x92,
	0x51, 0x7e, 0x93, 0xdd, 0x40, 0x7b, 0x0a, 0xe9, 0x92, 0x10, 0xd4, 0x62, 0x3a, 0xa2, 0x7a, 0xea,
	0xe5, 0x37, 0xf2, 0x61, 0x39, 0xc3, 0x23, 0xc2, 0x78, 0x26, 0x37, 0x5a, 0x53, 0x97, 0x30, 0xa1,
	0xb4, 0xb7, 0x94, 0x72, 0x9c, 0xe5, 0x4a, 0xab, 0x2c, 0xff, 0x13, 0x58, 0x1f, 0xc4, 0xf4, 0x26,
	0x8c, 0x2f, 0xa4, 0xf2, 0xe6, 0x99, 0x4f, 0x85, 0xd9, 0x32, 0x85, 0x79, 0x2a, 0xef, 0xb6, 0x2c,
	0xea, 0x81, 0xbc, 0x3b, 0x12, 0xd6, 0x96, 0x3f, 0x80, 0x4e, 0x99, 0x5c, 0x17, 0xd1, 0x2b, 0xfa,
	0x6e, 0xc9, 0xbe, 0x6f, 0xa9, 0xbe, 0x97, 0x5d, 0x27, 0x31, 0x2f, 0x5a, 0xff, 0x9b, 0x0d, 0xe8,
	0xe1, 0xb2, 0x68, 0xc6, 0x4b, 0x92, 0x44, 0x79, 0x33, 0xc4, 0xb7, 0xc8, 0x90, 0x0d, 0x69, 0xa6,
	0x06, 0xd4, 0x0e, 0x94, 0x31, 0xe3, 0x84, 0x38, 0xaf, 0xfd, 0xa0, 0xa9, 0xcd, 0x79, 0xd0, 0xbc,
	0x01, 0x2b, 0x61, 0x9a, 0xc6, 0x64, 0x98, 0x53, 0xd6, 0x25, 0x65, 0x19, 0x44, 0x5d, 0x68, 0x19,
	0x80, 0x24, 0x54, 0xb3, 0x5c, 0x85, 0xc5, 0x36, 0x46, 0xf8, 0x8e, 0x0c, 0xf1, 0x31, 0xbe, 0x3b,
	0xb9, 0x3a, 0xd5, 0xd3, 0x5d, 0xc2, 0xc4, 0x44, 0x2b, 0x5b, 0x12, 0x29, 0x69, 0x30, 0x10, 0xb1,
	0x3e, 0x0a, 0x39, 0xbe, 0x0f, 0x5f, 0x7d, 0xd8, 0x3f, 0xd2, 0x2a, 0x6a, 0x20, 0x68, 0x0f, 0x96,
	0xb4, 0x25, 0x09, 0x40, 0x3a, 0x98, 0xd0, 0xe1, 0x1f, 0x0e, 0xd4, 0xc4, 0x2c, 0xa3, 0x01, 0xd4,
	0xc4, 0x81, 0x42, 0xea, 0x50, 0x54, 0xee, 0x79, 0x6f, 0xa3, 0x82, 0xea, 0xe3, 0x80, 0xbe, 0xfd,
	0xe5, 0xd7, 0xef, 0xed, 0x65, 0x04, 0xf2, 0xb5, 0x29, 0xc4, 0x81, 0xa1, 0xe7, 0xe0, 0x0c, 0x30,
	0x47, 0x6d, 0xf9, 0x0b, 0x93, 0x63, 0xe6, 0x71, 0xf3, 0xb7, 0x24, 0xc5, 0x1a, 0x6a, 0x4d, 0x29,
	0x7a, 0x5f, 0x93, 0xe8, 0x1b, 0xf4, 0x3e, 0x34, 0x8e, 0xe4, 0xe5, 0x82, 0xd6, 0x4d, 0x65, 0x2d,
	0xb3, 0x55, 0xde, 0x05, 0xfe, 0x86, 0x64, 0x6b, 0xf9, 0x46, 0x42, 0x4f, 0xad, 0x7d, 0x74, 0x09,
	0x0d, 0x75, 0x6c, 0xd1, 0xa6, 0x4a, 0xab, 0xaa, 0x7d, 0xde, 0x66, 0x91, 0x6e, 0xf9, 0xc0, 0x7b,
	0x92, 0xb0, 0xe3, 0x55, 0xd3, 0x13, 0xac, 0x1f, 0x40, 0xe3, 0x18, 0xc7, 0x98, 0xe3, 0x19, 0xc5,
	0xce, 0xe3, 0xd3, 0xe5, 0xee, 0x3f, 0x28, 0x77, 0x0c, 0xab, 0x2a, 0xab, 0xf3, 0xe2, 0xf6, 0xaa,
	0xa4, 0x5a, 0x91, 0x9b, 0xb9, 0x21, 0xfe, 0x2f, 0x43, 0xec, 0x78, 0x6e, 0x25, 0x44, 0x2f, 0x17,
	0x9f, 0xa7, 0xd6, 0xfe, 0xe1, 0xef, 0x36, 0x34, 0x4f, 0x13, 0x2e, 0xd4, 0x3c, 0x46, 0x2f, 0xa0,
	0x2e, 0xdf, 0x7e, 0x68, 0x4d, 0x6d, 0xb3, 0xf1, 0x9e, 0xf4, 0x90, 0x09, 0xe9, 0x08, 0xbb, 0x32,
	0x82, 0xeb, 0xaf, 0xcb, 0x08, 0x44, 0xd3, 0xf4, 0x62, 0xe1, 0x24, 0x1a, 0x73, 0x01, 0x0b, 0xfa,
	0x99, 0xab, 0xf7, 0xae, 0xfc, 0x66, 0xf7, 0x3a, 0x65, 0x50, 0xb3, 0xee, 0x48, 0xd6, 0x2d, 0xb4,
	0x51, 0x66, 0x4d, 0x35, 0xd3, 0x35, 0x34, 0x73, 0x79, 0xd4, 0x43, 0x5a, 0x11, 0x50, 0x3d, 0xa4,
	0x55, 0x0d, 0xcd, 0xb3, 0x45, 0x9b, 0x65, 0xde, 0x9b, 0x9c, 0x2c, 0x84, 0x65, 0x53, 0x6c, 0x90,
	0x3b, 0x43, 0x9e, 0x54, 0x80, 0x27, 0xb3, 0x84, 0x4b, 0x05, 0xd9, 0x96, 0x41, 0x36, 0x51, 0xa7,
	0x1c, 0x44, 0xe9, 0xe8, 0x4d, 0x43, 0xfe, 0xf9, 0x7a, 0xe7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x8d, 0x2a, 0xf6, 0x6c, 0xad, 0x0d, 0x00, 0x00,
}
